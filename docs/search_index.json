[["index.html", "Stata: Erzeugen von Deskriptions- und Regressionstabellen Export in Word und Latex Herzlich Willkommen", " Stata: Erzeugen von Deskriptions- und Regressionstabellen Export in Word und Latex Andreas Filser 2022-01-20 Herzlich Willkommen Hier entsteht das Begleitskript für die Weiterbildung Stata  Erzeugen von Deskriptions- und Regressionstabellen am BIBB von Andreas Filser am 16.12.2021 "],["base.html", "1 Tabellenexport mit Stata: Grundlagen &amp; Pakete 1.1 Grundlagen: e() und r() 1.2 Kurs-Setup 1.3 Übung", " 1 Tabellenexport mit Stata: Grundlagen &amp; Pakete Es gibt eine ganze Reihe von ados, welche einen Tabellenexport aus Stata erlauben. Wir werden mit estout/esttab von Ben Jann arbeiten, das einige Vorteile bietet: Zunächst können damit sowohl Deskriptions- als auch Regressionstabellen exportiert werden - man muss also nur eine Syntaxlogik lernen. Dabei sind Exportbefehle für (fast) alle gängigen Deskriptionen und Regressionsmodelle vorhanden, inklusive Outputs von margins. Außerdem können damit Tabellen sowohl in Word-, Latex- und auch Excel-Formate exportiert werden - auch hier ist (fast) die gleiche Syntaxlogik verwendbar. Darüber hinaus bietet esttab die Möglichkeit einiger Formatierungseinstellungen. Um estout/esttab zu verwenden, müssen wir es zunächst installieren: ssc install estout, replace Dies sind die aktuellen Versionen: which estout // check versions *! version 3.24 30apr2021 Ben Jann which esttab // check version *! version 2.1.0 19may2021 Ben Jann *! wrapper for estout Mit estout/esttab können wir Tabellen mit zusammenfassenden Statistiken und Regressionsergebnissen zu erstellen, die leicht in oder importiert werden können oder in Word verwendet werden können. Für die Latex-Verion ergibt sich der Vorteil, dass das ganze System dynamisch ist. Wenn wir etwas in unserem Do-File ändern (z. B. eine bestimmte Gruppe weglassen, eine neue Variabe aufnehmen), dann werden die Ergebnisse automatisch in LaTeX aktualisiert. Das kann eine Menge Zeit sparen, aber die Einrichtung in Latex ist sehr zeitintensiv und deren Details würden den Rahmen unseres Kurses sprengen. Ich stelle daher hier eine (sehr einfache) Latexvorlage zur Verfügung, die versierte Latex-Nutzer*innen gerne an Ihre Bedürfnisse anpassen können. 1.1 Grundlagen: e() und r() Grundsätzlich baut esttab auf die Postestimates e() auf. Bei jedem Befehl werden im Hintergrund Werte in Matrizen und Skalere (also Zahlen) abgelegt, bspw. bei einem Regressionsmodell. Mit ereturn list können wir uns eine Liste der Postestimates ausgeben lassen: quietly reg F518_SUF zpalter ereturn list scalars: e(N) = 16543 e(df_m) = 1 e(df_r) = 16541 e(F) = 105.3561454498825 e(r2) = .0063290815436915 e(rmse) = 3525.162828161657 e(mss) = 1309236899.97876 e(rss) = 205551251614.9366 e(r2_a) = .0062690083366028 e(ll) = -158590.4618746699 e(ll_0) = -158642.9792418738 e(rank) = 2 macros: e(cmdline) : &quot;regress F518_SUF zpalter&quot; e(title) : &quot;Linear regression&quot; e(marginsok) : &quot;XB default&quot; e(vce) : &quot;ols&quot; e(depvar) : &quot;F518_SUF&quot; e(cmd) : &quot;regress&quot; e(properties) : &quot;b V&quot; e(predict) : &quot;regres_p&quot; e(model) : &quot;ols&quot; e(estat_cmd) : &quot;regress_estat&quot; matrices: e(b) : 1 x 2 e(V) : 2 x 2 functions: e(sample) Das Grundprinzip ist dann immer: Auswertungsbefehl Tabelle mit esttab erstellen Die Matrizen können wir mit matrix list, die Skalare mit scalar list + Name aufrufen, unter e(b) sind beispielsweise die Koeffizienten abgelegt: matrix list e(b) e(b)[1,2] zpalter _cons y1 24.622534 2381.2797 Bei vielen deskriptiven Befehlen werden die Kennzahlen hingegen als results in r() abgelegt. An die Werte in r() kommen wird mit return list, ereturn list für e() ist dahingegen leer: quietly su F518_SUF ereturn list return list scalars: r(N) = 16635 r(sum_w) = 16635 r(mean) = 3532.108506161707 r(Var) = 12467451.86889181 r(sd) = 3530.927904799503 r(min) = 1 r(max) = 72000 r(sum) = 58756625 Das bringt mit sich, dass wir für Deskriptionen meist mit dem Hilfsbefehl estpost die in r() abgelegten Ergebnisse in e() umwandeln müssen. Grundsätzlich sind aber die Ergebnisse aus e() und r() alle in Tabellen mit esttab exportierbar. 1.2 Kurs-Setup 1.3 Übung Generieren Sie einmal BIBBBAuA_2018_suf1.0_clean.dta mit Hilfe von 00_init.do für die weiteren Aufgaben. Testen Sie einmal return list und erturn list nach reg F518_SUF zpalter bzw. su zpalter "],["desc.html", "2 Deskriptionen 2.1 summary 2.2 tabstat 2.3 export 2.4 Zusätzliche Kennzahlen hinzufügen 2.5 mehrere Variablen 2.6 Gruppenvergleich 2.7 Übungen 2.8 Mehr zu format", " 2 Deskriptionen 2.1 summary Hier ein Bespielbefehl für die Berechnung des arith. Mittels, des Medians, der Varianz und des Varianzkoeffizienten mit tabstat: summarize zpalter Variable | Obs Mean Std. Dev. Min Max -------------+--------------------------------------------------------- zpalter | 19,836 47.19228 11.33762 15 87 2.2 tabstat Mit tabstat können wir eine ganze Reihe statistischer Kennzahlen für metrische/kontinuierliche Merkmale berechnen. Die Syntax hat dabei das folgende Format: tabstat varlist, s(*option*) c(stat|var) Hier eine Übersicht der Kennzahlen: Option Kennzahl mean arithm. Mittel median Median count Anzahl der Beobachtungen ohne Missings n entspricht count sum Summe der Ausprägungen max Maximum min Minimum range Spannweite = max - min variance Varianz sd Standardabweichung cv Variationskoefficient (sd/mean) skewness Schiefe kurtosis Wölbung pX X. Perzentil (5,10,25,50,75,90,95,99) iqr Interquartilsdistanz = p75 - p25 q Entspricht p25 p50 p75 Hier ein Bespielbefehl für die Berechnung des arith. Mittels, des Medians, der Varianz und des Varianzkoeffizienten mit tabstat: tabstat zpalter, s(mean median var cv) c(stat) variable | mean sd min max N -------------+-------------------------------------------------- zpalter | 47.19228 11.33762 15 87 19836 ---------------------------------------------------------------- Für Deskriptionsbefehle müssen wir immer zuerst ein estpost voranstellen: estpost tabstat F518_SUF, c(stat) stat(mean sd min max n) esttab, cells(&quot;mean sd min max count&quot;) Summary statistics: mean sd min max count for variables: F518_SUF | e(mean) e(sd) e(min) e(max) e(count) -------------+------------------------------------------------------- F518_SUF | 3532.109 3530.928 1 72000 16635 ----------------------------------------------------------------------------- (1) mean sd min max count ----------------------------------------------------------------------------- F518_SUF 3532.109 3530.928 1 72000 16635 ----------------------------------------------------------------------------- N 16635 ----------------------------------------------------------------------------- Wenn wir jetzt den Median hinzufügen möchten, brauchen wir ein neues estpost: esttab, cells(&quot;mean p50 sd min max count&quot;) (1) mean p50 sd min max count ------------------------------------------------------------------------------------------ F518_SUF 3532.109 3530.928 1 72000 16635 ------------------------------------------------------------------------------------------ N 16635 ------------------------------------------------------------------------------------------ tabstat mit p50 für Median: estpost tabstat F518_SUF, c(stat) stat(mean p50 sd min max n) esttab, cells(&quot;mean p50 sd min max count&quot;) Summary statistics: mean p50 sd min max count for variables: F518_SUF | e(mean) e(p50) e(sd) e(min) e(max) e(count) -------------+------------------------------------------------------------------ F518_SUF | 3532.109 3000 3530.928 1 72000 16635 ------------------------------------------------------------------------------------------ (1) mean p50 sd min max count ------------------------------------------------------------------------------------------ F518_SUF 3532.109 3000 3530.928 1 72000 16635 ------------------------------------------------------------------------------------------ N 16635 ------------------------------------------------------------------------------------------ So oder so sieht diese Tabelle sieht natürlich noch überhaupt nicht so aus, wie wir sie haben möchten. Um das anzupassen, stehen uns eine ganze Reihe an Formatierungsbefehlen zur Verfügung. nonumber \\(\\Rightarrow\\) Zahl oben ausblenden nomtitle \\(\\Rightarrow\\) Modelltitel oben ausblenden (hier die Leerzeile) noobs \\(\\Rightarrow\\) Beobachtungszahl unten ausblenden label \\(\\Rightarrow\\) Variablenlaben verwenden esttab, /// cells(&quot;mean p50 sd min max count&quot;) /// nonumber nomtitle noobs label mean p50 sd min max count -------------------------------------------------------------------------------------------------- Wie hoch ist Ih 3532.109 3000 3530.928 1 72000 16635 -------------------------------------------------------------------------------------------------- Das label ist hier allerdings abgeschnitten, wäre aber die Frageformulierung. Stattdessen hätten wir gernen einen Variablennamen, dazu können wir mit coeflabel() den Variablennamen und in \"\" ein Label angeben. Außerdem wollen wir die Spalten ansprechender beschriften, dazu geben wir mit collabels ebenfalls in \"\" der Reihe nach Werte an: esttab, /// cells(&quot;mean sd min max count&quot;) /// nonumber nomtitle nonote noobs label /// collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Median&quot; &quot;Min&quot; &quot;Max&quot; &quot;N&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot;) Mean SD Median Min Max N -------------------------------------------------------------------------------------------------- Bruttoverdienst 3532.109 3000 3530.928 1 72000 16635 -------------------------------------------------------------------------------------------------- Abschließend möchten wir noch die Kennzahlen formatieren. Dazu können wir auf die Zahlenformate in Stata zurückgreifen - hier eine kurze Erklärung dazu. esttab, /// cells(&quot;mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%13.0fc)) max(fmt(%13.0fc)) count(fmt(%6.0fc))&quot;) /// nonumber nomtitle nonote noobs label /// collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Min&quot; &quot;Max&quot; &quot;N&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot;) Mean SD Min Max N ------------------------------------------------------------------------------------- Bruttoverdienst 3,532.11 3,530.93 1 72,000 16,635 ------------------------------------------------------------------------------------- Übung 1 2.3 export esttab using &quot;${word}/tab1.rtf&quot;, /// cells(&quot;mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%4.0fc)) max(fmt(%4.0fc)) count(fmt(%4.0fc))&quot;) /// nonumber nomtitle nonote noobs label /// collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Min&quot; &quot;Max&quot; &quot;N&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot;) /// replace esttab using &quot;${tex}/tab1.tex&quot;, /// cells(&quot;mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%4.0fc)) max(fmt(%4.0fc)) count(fmt(%4.0fc))&quot;) /// nonumber nomtitle nonote noobs label /// collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Min&quot; &quot;Max&quot; &quot;N&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot;) /// replace booktabs 2.4 Zusätzliche Kennzahlen hinzufügen Gelegentlich möchten wir aber unserer Tabelle auch noch weitere Kennzahlen hinzufügen, bspw. aus mdesc oder fastgini. ssc install mdesc ssc install fastgini Dazu können wir die estadd-Funktion nutzen. Um eine neue Spalte mit der gewünschten Kennzahl zu erhalten, müssen wir estadd matrix verwenden. Deswegen müssen wir ein klein bisschen in die matrix-Welt von Stata eintauchen, um die Werte richtig hinzufügen zu können. mdesc F518_SUF return list mat miss = r(miss) mat colname miss = F518_SUF mat list miss Variable | Missing Total Percent Missing ----------------+----------------------------------------------- F518_SUF | 3,377 20,012 16.87 ----------------+----------------------------------------------- scalars: r(percent) = 16.87487507495502 r(total) = 20012 r(miss) = 3377 macros: r(miss_vars) : &quot;F518_SUF&quot; symmetric miss[1,1] F518_SUF r1 3377 Die so formatierte \\(1x1\\) matrix können wir jetzt in unsere Tabelle einfügen, indem wir estadd matrix miss angeben: estadd mat miss added matrix: e(miss) : 1 x 1 Anschließend können wir die Tabelle mit esttab erstellen und die Information aus mdesc unter dem Namen der hinzugefügten matrix aufrufen: esttab, cells(&quot;mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min max count(fmt(%13.0fc)) miss(fmt(%13.0fc))&quot;) /// noobs nomtitle nonumber label collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Min&quot; &quot;Max&quot; &quot;N&quot; &quot;Missings&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot;) Mean SD Min Max N Missings -------------------------------------------------------------------------------------------------- Bruttoverdienst 3,532.11 3,530.93 1.00 72,000.00 16,635 3,377 -------------------------------------------------------------------------------------------------- Übung 2 2.5 mehrere Variablen Wir können natürlich auch mehrere Variablen in tabstat und damit in esttab aufnehmen: estpost tabstat zpalter F518_SUF, c(stat) stat(mean sd min max n) esttab, cells(&quot;mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min max count(fmt(%13.0fc))&quot;) noobs /// nomtitle nonumber label collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Min&quot; &quot;Max&quot; &quot;N&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot; zpalter &quot;Alter&quot;) Mean SD Min Max N ------------------------------------------------------------------------------------- Alter 47.19 11.34 15.00 87.00 19,836 Bruttoverdienst 3,532.11 3,530.93 1.00 72,000.00 16,635 ------------------------------------------------------------------------------------- Etwas tricky wirds aber, wenn wir auch hier eigene Kennzahlen miteinfügen möchten. Die r()-Skalare für mdesc (und auch fastgini) geben uns nämlich nur den Wert für die letzte Variable aus: mdesc zpalter F518_SUF return list Variable | Missing Total Percent Missing ----------------+----------------------------------------------- zpalter | 176 20,012 0.88 F518_SUF | 3,377 20,012 16.87 ----------------+----------------------------------------------- scalars: r(percent) = 16.87487507495502 r(total) = 20012 r(miss) = 3377 macros: r(miss_vars) : &quot;zpalter F518_SUF&quot; Daher müssen wir uns hier mit einer Schleife helfen: * matrix vorbereiten glo x = &quot;zpalter F518_SUF&quot; // auszuwertende Variablen glo len: word count ${x} // wie viele sind es? mat m1 = J(1,${len},.) // entsprechend lange Matrix erstellen J(Zeilen,Spalten,Inhalt) mat colname m1 = ${x} // spalten schon mal richtig benennen mat list m1 // ansehen * Schleife über die angegebenen Variablen forval y = 1/$len { loc v: dis word(&quot;${x}&quot;,`y&#39;) // y.tes Wort aus x in v ablegen display &quot;`v&#39;&quot; // zur Kontrolle: v anzeigen mdesc `v&#39; // missings in v berechnen loc res_mat = r(miss) mat m1[1,`y&#39;] = `res_mat&#39; } mat l m1 m1[1,2] zpalter F518_SUF r1 . . zpalter Variable | Missing Total Percent Missing ----------------+----------------------------------------------- zpalter | 176 20,012 0.88 ----------------+----------------------------------------------- F518_SUF Variable | Missing Total Percent Missing ----------------+----------------------------------------------- F518_SUF | 3,377 20,012 16.87 ----------------+----------------------------------------------- m1[1,2] zpalter F518_SUF r1 176 3377 und dann können wir wieder zur gewohnten Routine zurück. estpost mit quietly unterdrückt den Output, den wir ja schon kennen. quietly estpost tabstat zpalter F518_SUF, c(stat) stat(mean sd min max n) estadd mat m1 esttab, cells(&quot;count(fmt(%13.0fc)) m1(fmt(%13.0fc))&quot;) noobs /// nomtitle nonumber label collabels(&quot;N&quot; &quot;Missings&quot;) /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot; zpalter &quot;Alter&quot;) N Missings ---------------------------------------------- Alter 19,836 176 Bruttoverdienst 16,635 3,377 ---------------------------------------------- Übung 3 2.6 Gruppenvergleich Mit by(S1) bekommen wir einen Gruppenvergleich - hier zwischen Männern und Frauen. Die Option nototal unterdrückt dabei die total-Angabe estpost tabstat zpalter F518_SUF, by(S1) c(stat) stat(mean sd) estpost tabstat zpalter F518_SUF, by(S1) c(stat) stat(mean sd) nototal Summary statistics: mean sd for variables: zpalter F518_SUF by categories of: S1 S1 | e(mean) e(sd) -------------+---------------------- mÃ¤nnlich | zpalter | 46.49079 11.87744 F518_SUF | 4232.735 3951.324 -------------+---------------------- weiblich | zpalter | 47.90402 10.71604 F518_SUF | 2800.926 2852.935 -------------+---------------------- Total | zpalter | 47.19228 11.33762 F518_SUF | 3532.109 3530.928 Summary statistics: mean sd for variables: zpalter F518_SUF by categories of: S1 S1 | e(mean) e(sd) -------------+---------------------- mÃ¤nnlich | zpalter | 46.49079 11.87744 F518_SUF | 4232.735 3951.324 -------------+---------------------- weiblich | zpalter | 47.90402 10.71604 F518_SUF | 2800.926 2852.935 Mit par bekommen wir den entsprechenden Wert in Klammern angezeigt: esttab, cells(mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)) nostar nonumber unstack /// nomtitle nonote noobs /// collabels(none) /// eqlabels(&quot;Männer&quot; &quot;Frauen&quot;) /// nomtitles /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot; zpalter &quot;Alter&quot;) Männer Frauen -------------------------------------- Alter 46.5 47.9 (11.877) (10.716) Bruttoverd~t 4,232.7 2,800.9 (3,951.324) (2,852.935) -------------------------------------- Um die in cells() angegebenen Werte in eine Zeile zu bringen, müssen wir sie in \"\" setzen. esttab, cells(&quot;mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)&quot;) nostar nonumber unstack /// nomtitle nonote noobs label /// collabels(none) /// eqlabels(&quot;Männer&quot; &quot;Frauen&quot;) /// nomtitles /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot; zpalter &quot;Alter&quot;) Männer Frauen ------------------------------------------------------------------------ Alter 46.5 (11.877) 47.9 (10.716) Bruttoverdienst 4,232.7 (3,951.324) 2,800.9 (2,852.935) ------------------------------------------------------------------------ Mit collabels() können wir die Werte auch beschriften. esttab, cells(&quot;mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)&quot;) nostar nonumber unstack /// nomtitle nonote noobs label /// collabels(&quot;Mean&quot; &quot;SD&quot; &quot;Mean&quot; &quot;SD&quot;) /// eqlabels(&quot;Männer&quot; &quot;Frauen&quot;) /// nomtitles /// coeflabel(F518_SUF &quot;Bruttoverdienst&quot; zpalter &quot;Alter&quot;) Männer Frauen Mean SD Mean SD ------------------------------------------------------------------------ Alter 46.5 (11.877) 47.9 (10.716) Bruttoverdienst 4,232.7 (3,951.324) 2,800.9 (2,852.935) ------------------------------------------------------------------------ Übung 4 2.7 Übungen 2.7.1 Übung Erstellen Sie eine Überblickstabelle für F200 (Wochenarbeitszeit) mit Min, Mean, SD, 1. Quartil (p25), Median, 3. Quartil (p75) und der Anzahl der Beobachtungen. Labeln Sie die Spalten mit den Kennzahlen und auch die Variable. 2.7.2 Übung Ergänzen Sie die Tabelle von Übung 1 F200 um fastgini - so kommen Sie an die abgelegte Info: ssc install fastgini // falls nicht schon installiert fastgini F518_SUF return list 2.7.3 Übung Verändern Sie die oben gezeigte Schleife so, dass nicht mehr die Anzahl, sondern der Anteil der Missings eingefügt wird. mdesc zpalter F518_SUF return list 2.7.4 Übung Erweitern Sie den Gruppenvergleich um die Variablen az (Wochenarbeitszeit) und F1104 (Jahr des Schulabschlusses) Wo könnten Sie die Nachkommastellen verändern? Verändern Sie die Anzeige für die Mittelwerte auf 3 Nachkommastellen Lassen Sie sich in auch den Median ausgeben. Legen Sie dafür 0 Nachkommastellen als Format fest. Denken Sie daran, estpost neu zu konfigurieren. Passen Sie die Syntax in cells() an, um die Werte neben- oder untereinander angezeigt zu bekommen. 2.8 Mehr zu format Hier eine kurze (unvollständige) Erklärung zu den fmt()-Optionen, mehr unter help format oder hier 2.8.1 %w.df Mit w geben wir die Gesamtbreite des Outputs an - die Vorzeichen und Dezimaltrenner mitgezählt d gibt die Zahl der Dezimalstellen Grundsätzlich wird von rechts gezählt - The result is right-justified. Aus der Stata-Hilfe: The number 5.139 in %12.2f format displays as ----+----1-- 5.14 Beispiele help format dis strlen(&quot;10789.1234&quot;) display %10.2f 10789.1234 // 0 Nachkommastellen display %10.0f 10789.1234 // 2 Nachkommastellen display %11.5f 10789.1234 // 0 hinzugefügt! 10 10789 10789.12340 2.8.2 %w.dfc Analog zu %w.df, jedoch werden Kommata für bessere Lesbarkeit eingefügt. Auch die Kommata zählen für die Breite w. Während `` Mit %w**,**dfc können wir das Format für Dezimal- und Tausendertrenner ändern: Dezimalstellen werden mit einem , abgetrennt, 1000er mit . Beispiele: mit fc werden Tausendertrenner eingefügt display %10.2fc 10789.1234 display %10,2fc 10789.1234 // , und . tauschen -&gt; &quot;dt Format&quot; "],["tab.html", "3 tabulate 3.1 tab x: One-way frequency table 3.2 tab var1 var2: Kontingenz-/Kreuztabelle 3.3 Gewichtete Tabelle mit svy 3.4 Übungen", " 3 tabulate Mit table können wir sowohl uni- als auch bivariate Häufigkeitsauszählungen erstellen. Auch diese können wir mit esttab exportieren. Außerdem können wir auch gewichtete Tabellen exportieren. 3.1 tab x: One-way frequency table tabulate m1202 HÃ¶chster Ausbi | Freq. Percent Cum. ----------------------------------------+----------------------------------- Ohne Berufsabschluss | 1,091 5.46 5.46 duale o. schulische Berufsausbildung/ei | 9,297 46.56 52.03 Aufstiegsfortbildung (Meister, Technike | 1,725 8.64 60.67 Fachhochschule, UniversitÃ¤t/ geh., hÃ¶he | 7,854 39.33 100.00 ----------------------------------------+----------------------------------- Total | 19,967 100.00 Auch hier benötigen wir estpost, um dann die esttab-Tabelle zu erstellen: estpost tabulate m1202 esttab, cells(&quot;b(label(freq)) pct(fmt(%13.0fc)) cumpct(fmt(%13.0fc))&quot;) /// nonumber nomtitle noobs m1202 | e(b) e(pct) e(cumpct) -------------+--------------------------------- 1 | 1091 5.464016 5.464016 2 | 9297 46.56183 52.02584 3 | 1725 8.639255 60.6651 4 | 7854 39.3349 100 -------------+--------------------------------- Total | 19967 100 row labels saved in macro e(labels) --------------------------------------------------- freq pct cumpct --------------------------------------------------- 1 1091 5 5 2 9297 47 52 3 1725 9 61 4 7854 39 100 Total 19967 100 --------------------------------------------------- varlabels() \\(\\Rightarrow\\) Labels verwenden varwidth(40) \\(\\Rightarrow\\) Breite anpassen sodass ganzes Label sichtbar esttab, cells(&quot;b(label(freq)) pct(fmt(%13.0fc)) cumpct(fmt(%13.0fc))&quot;) /// nonumber nomtitle noobs /// varlabels(`e(labels)&#39;) /// varwidth(40) freq pct cumpct ------------------------------------------------------------------------------- Ohne Berufsabschluss 1091 5 5 duale o. schulische Berufsausbildung/ein 9297 47 52 Aufstiegsfortbildung (Meister, Techniker 1725 9 61 Fachhochschule, UniversitÃ¤t/ geh., hÃ¶her 7854 39 100 Total 19967 100 ------------------------------------------------------------------------------- Export: esttab using &quot;${word}/03_tab1.rtf&quot;, cells(&quot;b(label(freq)) pct(fmt(%13.0fc)) cumpct(fmt(%13.0fc))&quot;) /// nonumber nomtitle noobs /// varlabels(`e(labels)&#39;) /// varwidth(40) /// replace Übung 1 3.2 tab var1 var2: Kontingenz-/Kreuztabelle tabulate m1202 S1 | Geschlecht HÃ¶chster Ausbi | mÃ¤nnlich weiblich | Total ----------------------+----------------------+---------- Ohne Berufsabschluss | 594 497 | 1,091 duale o. schulische B | 4,371 4,926 | 9,297 Aufstiegsfortbildung | 1,073 652 | 1,725 Fachhochschule, Unive | 4,015 3,839 | 7,854 ----------------------+----------------------+---------- Total | 10,053 9,914 | 19,967 estpost gibt uns hier vier Kennzahlen: b \\(\\Rightarrow\\) abs. Häufigkeiten pct \\(\\Rightarrow\\) rel. Häufigkeiten colpct \\(\\Rightarrow\\) Spaltenprozente rowpct \\(\\Rightarrow\\) Zeilenprozente estpost tabulate m1202 S1 esttab, cell(b(fmt(%13.0fc))) unstack noobs nonumber nomtitles /// collabels(none) varlabels(`e(labels)&#39;) varwidth(40) S1 | m1202 | e(b) e(pct) e(colpct) e(rowpct) -------------+-------------------------------------------- mÃ¤nnlich | 1 | 594 2.974909 5.908684 54.44546 2 | 4371 21.89112 43.47956 47.01517 3 | 1073 5.373867 10.67343 62.2029 4 | 4015 20.10818 39.93833 51.12045 Total | 10053 50.34807 100 50.34807 -------------+-------------------------------------------- weiblich | 1 | 497 2.489107 5.013113 45.55454 2 | 4926 24.67071 49.68731 52.98483 3 | 652 3.265388 6.576558 37.7971 4 | 3839 19.22672 38.72302 48.87955 Total | 9914 49.65193 100 49.65193 -------------+-------------------------------------------- Total | 1 | 1091 5.464016 5.464016 100 2 | 9297 46.56183 46.56183 100 3 | 1725 8.639255 8.639255 100 4 | 7854 39.3349 39.3349 100 Total | 19967 100 100 100 row labels saved in macro e(labels) ------------------------------------------------------------------------------- mÃ¤nnlich weiblich Total ------------------------------------------------------------------------------- Ohne Berufsabschluss 594 497 1,091 duale o. schulische Berufsausbildung/ein 4,371 4,926 9,297 Aufstiegsfortbildung (Meister, Techniker 1,073 652 1,725 Fachhochschule, UniversitÃ¤t/ geh., hÃ¶her 4,015 3,839 7,854 Total 10,053 9,914 19,967 ------------------------------------------------------------------------------- Dazu noch die Labels und mit mgroups eine Spaltenüberschrift: esttab, cell(b(fmt(%13.0fc))) unstack noobs collabels(none) nonumber nomtitles /// varlabels(`e(labels)&#39;) /// eqlabels(, lhs(&quot;Ausbildungsabs.&quot;)) /// varwidth(40) /// mgroups(&quot;Gender&quot; &quot;&quot;, pattern(1 0 1)) Gender Ausbildungsabs. mÃ¤nnlich weiblich Total ------------------------------------------------------------------------------- Ohne Berufsabschluss 594 497 1,091 duale o. schulische Berufsausbildung/ein 4,371 4,926 9,297 Aufstiegsfortbildung (Meister, Techniker 1,073 652 1,725 Fachhochschule, UniversitÃ¤t/ geh., hÃ¶her 4,015 3,839 7,854 Total 10,053 9,914 19,967 ------------------------------------------------------------------------------- loc x &quot;eingefügtem Text&quot; esttab, cell(b) unstack noobs collabels(none) nonumber nomtitles /// varlabels(`e(labels)&#39;) /// eqlabels(, lhs(&quot;Ausbildungsabs.&quot;)) /// varwidth(40) /// mgroups(&quot;Gender&quot; &quot;&quot;, pattern(1 0 1)) /// Überschrift über spalten title(&quot;Hier kann ein Titel stehen&quot;) /// titel note(&quot;Und hier eine Notiz sogar mit: `x&#39;&quot;) // notiz Hier kann ein Titel stehen ------------------------------------------------------------------------------- Gender Ausbildungsabs. mÃ¤nnlich weiblich Total ------------------------------------------------------------------------------- Ohne Berufsabschluss 594 497 1091 duale o. schulische Berufsausbildung/ein 4371 4926 9297 Aufstiegsfortbildung (Meister, Techniker 1073 652 1725 Fachhochschule, UniversitÃ¤t/ geh., hÃ¶her 4015 3839 7854 Total 10053 9914 19967 ------------------------------------------------------------------------------- Und hier eine Notiz sogar mit: eingefügtem Text Übung 2 3.3 Gewichtete Tabelle mit svy svyset _n [pweight=gew2018] estpost svy: tabulate m1202 S1 , row percent count esttab ., cell(b(fmt(%13.2fc))) /// nostar nostar unstack /// nonumber nomtitles collabels(none) /// varlabels(`e(labels)&#39;) eqlabels(`e(eqlabels)&#39;, lhs(&quot;Ausbildungsabs.&quot;)) /// mgroups(&quot;Gender&quot;, pattern(0 1 0 1) span ) /// varwidth(40) Gender Ausbildungsabs. mÃ¤nnlich weiblich Total ------------------------------------------------------------------------------- Ohne Berufsabschluss 594.00 497.00 1,091.00 duale o. schulische Berufsausbildung/ein 4,371.00 4,926.00 9,297.00 Aufstiegsfortbildung (Meister, Techniker 1,073.00 652.00 1,725.00 Fachhochschule, UniversitÃ¤t/ geh., hÃ¶her 4,015.00 3,839.00 7,854.00 Total 10,053.00 9,914.00 19,967.00 ------------------------------------------------------------------------------- N 19967 ------------------------------------------------------------------------------- esttab using &quot;${word}/svytab.rtf&quot;, cell(b(fmt(%13.2fc))) /// nostar nostar unstack /// nonumber nomtitles collabels(none) /// varlabels(`e(labels)&#39;) eqlabels(`e(eqlabels)&#39;, lhs(&quot;Ausbildungsabs.&quot;)) /// mgroups(&quot;Gender&quot;, pattern(0 1) span ) /// varwidth(40) /// replace esttab . using &quot;${tex}/svy_desc.tex&quot;, cell(b(fmt(%13.2fc))) /// nostar nostar unstack /// nonumber nomtitles collabels(none) /// varlabels(`e(labels)&#39;) eqlabels(`e(eqlabels)&#39;, lhs(&quot;Ausbildungsabs.&quot;)) /// mgroups(&quot;Gender&quot;, pattern(0 1 0 1) prefix(\\multicolumn{@span}{c}{) suffix(}) span erepeat(\\cmidrule(lr){@span})) /// booktabs replace e(b) = cell percentages e(se) = standard errors of cell percentages e(lb) = lower 95% confidence bounds for cell percentages e(ub) = upper 95% confidence bounds for cell percentages e(cell) = cell percentages e(row) = row percentages e(col) = column percentages e(count) = weighted counts e(obs) = number of observations 3.4 Übungen 3.4.1 Übung Erstellen Sie eine Häufigkeitstabelle für von gkpol. Lassen Sie sich die Labels für gkpol anzeigen und passen Sie die Tabelle nach Ihren Vorstellungen an.Wie würden Sie die kumulierten Anteile aus Ihrer Tabelle ausblenden? Passen Sie die Labels für die Spalten (bspw. N statt freq und % statt pct) an und blenden Sie die kumulierte relative Häufigkeit aus. 3.4.2 Übung Erstellen Sie eine Kreuztabelle für gkpol und mobil. Passen Sie die Beschriftung der Tabelle nach Ihren Vorstellungen an. Was müssten Sie ändern, um die Zeilen- oder Spaltenprozente anzeigen zu lassen? Fügen Sie auch eine Notiz ein und einen Titel ein "],["cormat.html", "4 Korrelationsmatrix 4.1 corr x 4.2 Spearmans Rho: 4.3 ttest 4.4 Übungen", " 4 Korrelationsmatrix Häufig ist eine Korrelationsmatrix ein Bestandteil einer Datendeskription. 4.1 corr x correlate zpalter F518_SUF F200 (obs=14,579) | zpalter F518_SUF F200 -------------+--------------------------- zpalter | 1.0000 F518_SUF | 0.0582 1.0000 F200 | -0.0539 0.2922 1.0000 Wieder benötigen wir estpost, um dann die esttab-Tabelle zu erstellen: Mit modelwidth() können wir die Breite der Spalten steuern. estpost correlate zpalter F518_SUF F200, matrix esttab ., not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// varwidth(30) /// modelwidth(30) | e(b) e(rho) e(p) e(count) -------------+-------------------------------------------- zpalter | zpalter | 1 1 19836 F518_SUF | .0795555 .0795555 1.21e-24 16543 F200 | -.0557859 -.0557859 2.35e-13 17228 F518_SUF | F518_SUF | 1 1 16635 F200 | .2924452 .2924452 6.4e-287 14659 F200 | F200 | 1 1 17376 --------------------------------------------------------------------- (1) Alter (2) Bru~n (3) Woc~t --------------------------------------------------------------------- (1) Alter 1 (2) Bruttoeinkommen 0.0796*** 1 (3) Wochenarbeitszeit -0.0558*** 0.292*** 1 --------------------------------------------------------------------- * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 esttab using &quot;${word}/corrmat.rtf&quot;, not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// varwidth(30) /// replace esttab using &quot;${tex}/corrmat.tex&quot;, not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// varwidth(30) /// replace booktabs 4.2 Spearmans Rho: Für den Rangkorrelationskoeffizienten müssen wir einen kleinen Umweg gehen und die Variablen mit Hilfe von egen in Ränge umwandeln: foreach v of varlist zpalter F518_SUF F200 { egen rnk_`v&#39; = rank (`v&#39;), unique } estpost correlate rnk_zpalter rnk_F518_SUF rnk_F200, matrix | e(b) e(rho) e(p) e(count) -------------+-------------------------------------------- rnk_zpalter | rnk_zpalter | 1 1 19836 rnk_F518_SUF | .0971437 .0971437 5.57e-36 16543 rnk_F200 | -.0654795 -.0654795 7.76e-18 17228 rnk_F518_SUF | rnk_F518_SUF | 1 1 16635 rnk_F200 | .4553877 .4553877 0 14659 rnk_F200 | rnk_F200 | 1 1 17376 Danach können wir die Korrelationsmatrix auch für den Rangkorrelationskoeffizienten wie oben erstellen: esttab ., not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// varwidth(30) /// modelwidth(30) /// title(&quot;Dies ist der Spearman-Rangkorrelationskoeffizient&quot;) Dies ist der Spearman-Rangkorrelationskoeffizient ------------------------------------------------------------------------------------------------------------------------------------ (1) Alter (2) Bruttoeinkommen (3) Wochenarbeitszeit ------------------------------------------------------------------------------------------------------------------------------------ rnk_zpalter 1 rnk_F518_SUF 0.0971*** 1 rnk_F200 -0.0655*** 0.455*** 1 ------------------------------------------------------------------------------------------------------------------------------------ * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 esttab using &quot;${word}/corrmat2.rtf&quot;, not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// varwidth(30) /// replace /// title(&quot;Dies ist der Spearman-Rangkorrelationskoeffizient&quot;) esttab using &quot;${tex}/corrmat2.tex&quot;, not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// varwidth(30) /// replace booktabs /// title(&quot;Dies ist der Spearman-Rangkorrelationskoeffizient&quot;) Übung 4.3 ttest t-Test sind ebenfalls ein Klassiker. Mit ttest az, by(S1) unequal können wir einen Signifikanztest berechnen. Auch hier benötigen wir estpost, um die Ergebnisse zu speichern und dann mit esttab verarbeiten zu können. ttest az, by(S1) unequal estpost ttest az F518_SUF, by(S1) unequal | e(b) e(count) e(se) e(t) e(df_t) e(p_l) e(p) e(p_u) e(N_1) e(mu_1) e(N_2) e(mu_2) -------------+------------------------------------------------------------------------------------------------------------------------------------ az | 8.320936 20012 .155519 53.50431 19742.97 1 0 0 10074 42.43776 9938 34.11682 F518_SUF | 1431.809 16635 53.27106 26.87781 15471.34 1 1.5e-155 7.3e-156 8495 4232.735 8140 2800.926 esttab, wide nonumber noobs az 8.321*** (53.50) F518_SUF 1431.8*** (26.88) ----------------------------------------- t statistics in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 esttab, cell(&quot;b(fmt(%13.3fc)) t(fmt(%13.3fc) star) N_1(fmt(%13.0fc)) mu_1 N_2(fmt(%13.0fc)) mu_2&quot;) /// unstack wide nonumber noobs nomtitles /// collabels(&quot;Difference&quot; &quot;t&quot; &quot;N(M)&quot; &quot;Mean(M)&quot; &quot;N(W)&quot; &quot;Mean(W)&quot;) Difference t N(M) Mean(M) N(W) Mean(W) --------------------------------------------------------------------------------------------- az 8.321 53.504*** 10,074 42.438 9,938 34.117 F518_SUF 1,431.809 26.878*** 8,495 4,232.735 8,140 2,800.926 --------------------------------------------------------------------------------------------- Übung 4.4 Übungen 4.4.1 Übung Erstellen Sie eine Korrelationstabelle für zpalter F518_SUF F200 und F1410_01 (Jahre berufstätig in D) 4.4.2 Übung Erstellen Sie eine t-Testtabelle für Gruppenunterschiede zwischen Menschen mit und ohne Migrationshintergrund für die Variablen az und F518_SUF. Die Variablen zum Migrationshintergrund können Sie so erstellen (siehe 01_init.do): gen mig01 = Mig != 0 In mig01 steht dann 0 für keinen Migrationshintergrund und 1 für Migrationshintergrund. "],["reg.html", "5 Regressionstabellen 5.1 regression 5.2 Eine Tabelle, ein Modell 5.3 kategoriale unabhängige Variable 5.4 mehrere Regressionsmodelle nebeneinander 5.5 Nur ein Koeffizient 5.6 mehrere Modellgruppen 5.7 Einmal mit allem 5.8 Übungen", " 5 Regressionstabellen 5.1 regression Regressionstabellen sind wohl der Klassiker des Tabellenexports. Das grundsätzliche Vorgehen für das Erstellen von Regressionstabellen mit esttab ist etwas anders als bei den Deskriptionstabellen: reg F518_SUF c.zpalter // einfaches Regressionsmodell estimates store reg1 // Ergebnisse speichern esttab reg1 // (ausgeblendet) Mit ereturn list bekommen wir alle abrufbaren Informationen angezeigt: Source | SS df MS Number of obs = 16,543 -------------+---------------------------------- F(1, 16541) = 105.36 Model | 1.3092e+09 1 1.3092e+09 Prob &gt; F = 0.0000 Residual | 2.0555e+11 16,541 12426773 R-squared = 0.0063 -------------+---------------------------------- Adj R-squared = 0.0063 Total | 2.0686e+11 16,542 12505168 Root MSE = 3525.2 ------------------------------------------------------------------------------ F518_SUF | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- zpalter | 24.62253 2.398848 10.26 0.000 19.92053 29.32453 _cons | 2381.28 115.577 20.60 0.000 2154.736 2607.823 ------------------------------------------------------------------------------ scalars: e(rank) = 2 e(ll_0) = -158642.9792418738 e(ll) = -158590.4618746699 e(r2_a) = .0062690083366028 e(rss) = 205551251614.9366 e(mss) = 1309236899.97876 e(rmse) = 3525.162828161657 e(r2) = .0063290815436915 e(F) = 105.3561454498825 e(df_r) = 16541 e(df_m) = 1 e(N) = 16543 macros: e(cmdline) : &quot;regress F518_SUF c.zpalter&quot; e(title) : &quot;Linear regression&quot; e(marginsok) : &quot;XB default&quot; e(vce) : &quot;ols&quot; e(depvar) : &quot;F518_SUF&quot; e(cmd) : &quot;regress&quot; e(properties) : &quot;b V&quot; e(predict) : &quot;regres_p&quot; e(model) : &quot;ols&quot; e(estat_cmd) : &quot;regress_estat&quot; matrices: e(b) : 1 x 2 e(V) : 2 x 2 functions: e(sample) Mit est dir bekommen wir übrigens eine Übersicht über alle Ergebnisse. Mit restore name können wir ein Modell aktivieren. Mit est drop _all können wir alle estimates löschen. Alle unter e() abgespeicherten Informationen können wir direkt in unsere esttab einfügen. Los gehts: 5.2 Eine Tabelle, ein Modell esttab reg1 // Tabelle mit Standard-Einstellungen (1) F518_SUF ---------------------------- zpalter 24.62*** (10.26) _cons 2381.3*** (20.60) ---------------------------- N 16543 ---------------------------- t statistics in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Das ist noch sehr basic. U.a. sind häufig statt der t-Werte die Standardfehler in Klammern genannt. Grundsätzlich können wir folgende Kennzahlen anfordern: + b Regressionskoeffizienten + se Standardfehler + t t-Werte + p p-Werte + ci 95%-Konfidenzintervalle + beta standardisierte Koeffizienten esttab reg1, b se(%9.3f) label // Formatierung, SE statt t + Variablen Labels (1) Wie hoch i~h ------------------------------------ Alter der Zielp 24.62*** (2.399) Constant 2381.3*** (115.577) ------------------------------------ Observations 16543 ------------------------------------ Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Außerdem wollen wir in der Regel nicht nur die Fallzahl, sondern auch weitere Informationen zum Modell angeben. Dabei können wir auf die Liste, die wir vorhin bei ereturn list gesehen haben, zurückgreifen. esttab reg1, b se(%9.3f) stats(N r2 ll F) // Modellkennzahlen angeben (volle Liste oben bei ereturn list) (1) F518_SUF ---------------------------- zpalter 24.62*** (2.399) _cons 2381.3*** (115.577) ---------------------------- N 16543 r2 0.00633 ll -158590.5 F 105.4 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Diese Informationen können wir natürlich auch labeln und formatieren wie wir es schon kennengelernt haben. Auch coeflabel funktioniert hier so wie bei tabstat zuvor: esttab reg1, b se(%9.3f) /// stats(r2 r2_a N, fmt(%9.4f %9.4f %9.0fc) labels(&quot;R²&quot; &quot;adj. R²&quot; &quot;Observations&quot;)) /// N und R² labeln coeflabel(zpalter &quot;Alter&quot; _cons &quot;Konstante&quot;) // Koeffizienten links labeln (1) F518_SUF ---------------------------- Alter 24.62*** (2.399) Konstante 2381.3*** (115.577) ---------------------------- R² 0.0063 adj. R² 0.0063 Observations 16,543 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Außerdem können wir mit mtitles die Beschrifung anpassen und mit nonumbers die Zahl oben ausblenden. Mit title können wir einen Tabellentitel und mit note eine Notiz unten hinzufügen. Wenn wir mehrere Zeilen möchten, dann geben wir einfach \"Text in 1. Zeile\" \"Text in 2. Zeile\" an: esttab reg1, b se(%9.3f) /// stats(r2 N, fmt(%9.3f %9.0g) labels(R² Observations)) /// coeflabel(zpalter &quot;Alter&quot; _cons &quot;Konstante&quot;) /// mtitles(&quot;1. Modell&quot;) /// nonumbers /// title(Tabellentitel) /// Titel für die Tabelle addnotes(&quot;erste Anmerkung&quot; &quot;zweite Anmerkung darunter&quot;) // Notizen ganz unten Tabellentitel ---------------------------- 1. Modell ---------------------------- Alter 24.62*** (2.399) Konstante 2381.3*** (115.577) ---------------------------- R² 0.006 Observations 16543 ---------------------------- Standard errors in parentheses erste Anmerkung zweite Anmerkung darunter * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Auch Signifikanzsterne anpassen, mit star() esttab reg1, b se(%9.3f) /// stats(r2 N, fmt(%9.3f %9.0g) labels(R² Observations)) /// coeflabel(zpalter &quot;Alter&quot; _cons &quot;Konstante&quot;) /// star(+ 0.10 * 0.05 ** 0.01 *** 0.001 **** 0.0001) (1) F518_SUF ----------------------------- Alter 24.62**** (2.399) Konstante 2381.3**** (115.577) ----------------------------- R² 0.006 Observations 16543 ----------------------------- Standard errors in parentheses + p&lt;0.10, * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001, **** p&lt;0.0001 Die Klammern können wir mit noparentheses unterdrücken oder mit brackets auf [] ändern. 5.2.1 Neben- statt untereinander Dafür steht uns wide zur Verfügung: esttab reg1, b se(%9.3f) /// wide /// stats(r2 N, fmt(%9.3f %9.0g) labels(R² Observations)) /// coeflabel(zpalter &quot;Alter&quot; _cons &quot;Konstante&quot;) /// title(Modelltitel) /// addnotes(&quot;erste Anmerkung&quot; &quot;zweite Anmerkung darunter&quot;) Modelltitel ----------------------------------------- (1) F518_SUF ----------------------------------------- Alter 24.62*** (2.399) Konstante 2381.3*** (115.577) ----------------------------------------- R² 0.006 Observations 16543 ----------------------------------------- Standard errors in parentheses erste Anmerkung zweite Anmerkung darunter * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Leider funktioniert das nicht für mehr als zwei Kennzahlen: esttab reg1,b se(%9.3f) ci(%9.3f) p(%9.3f) /// wide /// stats(r2 N, fmt(%9.3f %9.0g) labels(R² Observations)) /// coeflabel(zpalter &quot;Alter&quot; _cons &quot;Konstante&quot;) /// star(+ 0.10 * 0.05 ** 0.01 *** 0.001 **** 0.0001) /// title(Modelltitel) /// addnotes(&quot;erste Anmerkung&quot; &quot;zweite Anmerkung darunter&quot;) only one allowed of z, se, p, ci, and aux() r(198); end of do-file r(198); Hier müssen wir dann auf cells() und \"\" zurückgreifen. Mit ci_l und ci_u statt ci bekommen wir außerdem die untere und obere KI-Grenze in separaten Spalten angezeigt, was das Ganze etwas übersichtlicher macht: esttab reg1, cells(&quot;b se(fmt(%9.3f)) ci(fmt(%9.2f)) p(fmt(%9.3f))&quot;) esttab reg1, cells(&quot;b se(fmt(%9.3f)) ci_l(fmt(%9.2f)) ci_u(fmt(%9.2f)) p(fmt(%9.3f))&quot;) // Übersichtlicher: KIs aufteilen in zwei Spalten (1) F518_SUF b se ci95 p ---------------------------------------------------------------- zpalter 24.62253 2.399 19.92,29.32 0.000 _cons 2381.28 115.577 2154.74,2607.82 0.000 ---------------------------------------------------------------- N 16543 ---------------------------------------------------------------- ----------------------------------------------------------------------------- (1) F518_SUF b se min95 max95 p ----------------------------------------------------------------------------- zpalter 24.62253 2.399 19.92 29.32 0.000 _cons 2381.28 115.577 2154.74 2607.82 0.000 ----------------------------------------------------------------------------- N 16543 ----------------------------------------------------------------------------- Auch das können wir labeln - mit collabels: esttab reg1, cells(&quot;b se(fmt(%9.3f)) ci_l(fmt(%9.2f)) ci_u(fmt(%9.2f)) p(fmt(%9.3f))&quot;) /// collabels(&quot;B&quot; &quot;SE&quot; &quot;u.KI&quot; &quot;o.KI&quot; &quot;p&quot;) // labels (1) F518_SUF B SE u.KI o.KI p ----------------------------------------------------------------------------- zpalter 24.62253 2.399 19.92 29.32 0.000 _cons 2381.28 115.577 2154.74 2607.82 0.000 ----------------------------------------------------------------------------- N 16543 ----------------------------------------------------------------------------- Übung 5.3 kategoriale unabhängige Variable Für kategoriale unabhängige Variablen stellt sich noch die Herausforderung, dass wir die Referenzkategorie richtig angeben möchten. reg F518_SUF i.S1 estimates store reg2 esttab reg2, b se(%9.3f) /// coeflabel(1.S1 &quot;Maenner&quot; 2.S1 &quot;Frauen&quot; _cons &quot;Konstante&quot;) (1) F518_SUF ---------------------------- Maenner 0 (.) Frauen -1431.8*** (53.630) Konstante 4232.7*** (37.515) ---------------------------- N 16635 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Um Referenzkategorie in der Tabelle kennzuzeichnen, muss die Regression mit xi: erstellt werden. Der Koeffizienten für S1 = 2 ist dann _IS1_2: xi: reg F518_SUF i.S1 estimates store reg2b esttab reg2b, b se(%9.3f) /// coeflabel(_IS1_2 &quot;Frauen&quot; _cons &quot;Konstante&quot;) (1) F518_SUF ---------------------------- Frauen -1431.8*** (53.630) Konstante 4232.7*** (37.515) ---------------------------- N 16635 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Mit refcat() können wir jetzt eine Zeile in die Tabelle einfüge. Dazu geben wir die Variable an, überhalb derer die Zeile eingefügt werden soll (hier also _IS1_2) und den Text, der links in der Beschriftung angezeigt werden soll: esttab reg2b, b se(%9.3f) /// coeflabel(_IS1_2 &quot;Frauen&quot; _cons &quot;Konstante&quot;) /// refcat(_IS1_2 &quot;Männer&quot;) (1) F518_SUF ---------------------------- Männer ref. Frauen -1431.8*** (53.630) Konstante 4232.7*** (37.515) ---------------------------- N 16635 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Mit label(\"Referenzkategorie\") können wir ref. ersetzen. Mit below wird die Zeile unter der angegebenen Variable eingefügt. esttab reg2b, b se(%9.3f) /// coeflabel(_IS1_2 &quot;Frauen&quot; _cons &quot;Konstante&quot;) /// refcat(_IS1_2 &quot;Männer&quot;, label(&quot;Referenzkategorie&quot;) below) Übung 5.4 mehrere Regressionsmodelle nebeneinander Häufig haben wir aber mehrere Regressionsmodelle, die aufeinander aufbauen und sich alle auf die gleiche abhängige Variable beziehen. Für eine Übersicht werden solche Modelle häufig nebeneinander gestellt in einer Tabelle gezeigt. Auch das geht mit esttab. Wir können nämlich mit estimates store (est store) auch mehrere Modelle speichern und dann namentlich aufrufen. Dafür könnnen wir auch wild cards verwenden - also * als Platzhalter für alles oder nichts und ? für irgendein Zeichen. Mit est dir bekommen wir eine Liste alle gespeicherten Ergebnisse ausgegeben. estimates clear löst alle Ergebnisse, est drop name nur das Modell name. Genestete Modelle lassen sich mit einer Schleife elegant erstellen. Wir können dafür in globals die Kontrollvariablen angeben und anschließend die Modelle nacheinander schätzen lassen. glo mod1 &quot; &quot; glo mod2 &quot;c.zpalter&quot; glo mod3 &quot;c.zpalter##c.zpalter&quot; glo mod4 &quot;c.zpalter##c.zpalter i.m1202&quot; forval i = 1/4 { xi: reg F518_SUF i.S1 ${mod`i&#39;} est store regm`i&#39; } esttab regm*, b se(%9.3f) (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- _IS1_2 -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) zpalter 28.45*** 146.5*** 130.8*** (2.350) (17.208) (16.839) c.zpalter#~r -1.317*** -1.193*** (0.190) (0.186) _Im1202_2 470.2*** (119.627) _Im1202_3 1114.5*** (143.641) _Im1202_4 2322.9*** (120.657) _cons 4232.7*** 2922.0*** 467.3 -334.3 (37.515) (114.755) (372.647) (364.132) ---------------------------------------------------------------------------- N 16635 16543 16543 16521 ---------------------------------------------------------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Auch hier lohnt sich aber natürlich etwas label-Arbeit: esttab regm*, b se(%9.3f) /// coeflabel(_IS1_2 &quot;Frauen&quot; zpalter &quot;Alter&quot; /// c.zpalter#c.zpalter &quot;Alter²&quot; /// _Im1202_2 &quot;dual/schul. Abs.&quot; /// _Im1202_3 &quot;Meister/Techniker&quot; /// _Im1202_4 &quot;Hochschule/Uni&quot; /// _cons &quot;Konstante&quot;) /// refcat(_IS1_2 &quot;Männer&quot; /// _Im1202_2 &quot;kein Abs.&quot;) /// nomtitle /// stats(r2 N, fmt(%9.3f %9.0g) labels(R² Observations)) /// varwidth(20) (1) (2) (3) (4) ------------------------------------------------------------------------------------ Männer ref. ref. ref. ref. Frauen -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) Alter 28.45*** 146.5*** 130.8*** (2.350) (17.208) (16.839) Alter² -1.317*** -1.193*** (0.190) (0.186) kein Abs. ref. dual/schul. Abs. 470.2*** (119.627) Meister/Techniker 1114.5*** (143.641) Hochschule/Uni 2322.9*** (120.657) Konstante 4232.7*** 2922.0*** 467.3 -334.3 (37.515) (114.755) (372.647) (364.132) ------------------------------------------------------------------------------------ R² 0.041 0.049 0.052 0.117 Observations 16635 16543 16543 16521 ------------------------------------------------------------------------------------ Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Übung 5.5 Nur ein Koeffizient Manchmal möchten wir die Tabelle etwas entrümpeln und nur den interessierenden Koeffizienten behalten, das geht mit keep(): esttab regm*, b se(%9.3f) keep(_IS1_2) esttab regm*, b se(%9.3f) keep(_IS1_2 zpalter) // mehrere mit Leerzeichen (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- _IS1_2 -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) ---------------------------------------------------------------------------- N 16635 16543 16543 16521 ---------------------------------------------------------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 ---------------------------------------------------------------------------- (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- _IS1_2 -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) zpalter 28.45*** 146.5*** 130.8*** (2.350) (17.208) (16.839) ---------------------------------------------------------------------------- N 16635 16543 16543 16521 ---------------------------------------------------------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Allerdings fehlt hier jetzt die Information, welche Kontrollvariablen jeweils im Modell waren. Da kann uns estadd local weiter helfen. Damit können wir einen Text zu jedem estimate hinzufügen und den dann unten in der Tabelle ausgeben lassen. Wir erweitern unsere Schleife also und lassen sie nochmal laufen. Mit scalars(\"note Kontrollvariablen\") werden die vorher abgelegten notes dann als Zeile Kontrollvariablen in der Tabelle angezeigt. Mit modelwidth() können wir die Breite der Spalten steuern. glo mod1 &quot; &quot; glo mod2 &quot;c.zpalter&quot; glo mod3 &quot;c.zpalter##c.zpalter&quot; glo mod4 &quot;c.zpalter##c.zpalter i.m1202&quot; forval i = 1/4 { xi: reg F518_SUF i.S1 ${mod`i&#39;} est store regm`i&#39; estadd local note &quot;${mod`i&#39;}&quot; } esttab regm*, b se(%9.3f) keep(_IS1_2) scalars(&quot;note Kontrollvariablen&quot;) esttab regm*, b se(%9.3f) keep(_IS1_2) scalars(&quot;note Kontrollvariablen&quot;) /// modelwidth(25) /// coeflabel(_IS1_2 &quot;Frauen&quot;) /// refcat(_IS1_2 &quot;Männer&quot;) (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- _IS1_2 -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) ---------------------------------------------------------------------------- N 16635 16543 16543 16521 Kontrollva~n c.zpalter c.zpalter##c.zpalter c.zpalter##c.zpalter i.m1202 ---------------------------------------------------------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 -------------------------------------------------------------------------------------------------------------------------------- (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF -------------------------------------------------------------------------------------------------------------------------------- Männer ref. ref. ref. ref. Frauen -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) -------------------------------------------------------------------------------------------------------------------------------- N 16635 16543 16543 16521 Kontrollva~n c.zpalter c.zpalter##c.zpalter c.zpalter##c.zpalter i.m1202 -------------------------------------------------------------------------------------------------------------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Mit der regex-Funktion ustrregexra(\"\",\"Suchtext\", \"Ersetztext\") können wir aus den Variablenangaben auch noch sprechendere Bezeichnungen machen. Die Option quietly vor dem reg-Befehl unterdrückt die Standard-Regressionstabelle von Stata. forval i = 1/4 { quietly xi: reg F518_SUF i.S1 ${mod`i&#39;} est store regm`i&#39; loc note &quot;${mod`i&#39;}&quot; loc note = ustrregexra(&quot;`note&#39;&quot;,&quot;^\\s&quot;, &quot;-&quot;) // ^\\s = &quot;an Anfang Leerzeichen&quot; loc note = ustrregexra(&quot;`note&#39;&quot;,&quot;c.zpalter##c.zpalter&quot;, &quot;Alter &amp; Alter^2&quot;) loc note = ustrregexra(&quot;`note&#39;&quot;,&quot;c.zpalter&quot;, &quot;Alter&quot;) loc note = ustrregexra(&quot;`note&#39;&quot;,&quot; i.m1202&quot;, &quot;, Ausbildung&quot;) estadd local note &quot;`note&#39;&quot; } esttab regm*, b se(%9.3f) keep(_IS1_2) scalars(&quot;note Kontrollvariablen&quot;) /// modelwidth(25) /// varwidth(17) /// coeflabel(_IS1_2 &quot;Frauen&quot;) /// refcat(_IS1_2 &quot;Männer&quot;) /// nomtitle (1) (2) (3) (4) ------------------------------------------------------------------------------------------------------------------------------------- Männer ref. ref. ref. ref. Frauen -1431.8*** -1471.7*** -1496.8*** -1458.5*** (53.630) (53.722) (53.768) (52.124) ------------------------------------------------------------------------------------------------------------------------------------- N 16635 16543 16543 16521 Kontrollvariablen - Alter Alter &amp; Alter^2 Alter &amp; Alter^2, Ausbildung ------------------------------------------------------------------------------------------------------------------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Übung 5.6 mehrere Modellgruppen Manchmal möchten wir auch getrennte Modelle nebeneinander stellen. Auch das geht natürlich. Hier also eine Schleife über die Werte 1 und 2 von S1, also getrennte Modelle für Männer und Frauen durch die Bedingung if S1 == s am Ende des reg-Befehls: forvalues s = 1/2 { reg F518_SUF c.zpalter##c.zpalter if S1 == `s&#39; est store reg_`s&#39;_1 estadd local note &quot;Alter &amp; Alter^2&quot; reg F518_SUF c.zpalter##c.zpalter i.m1202 if S1 == `s&#39; est store reg_`s&#39;_2 estadd local note &quot;Alter &amp; Alter^2, Ausbildung&quot; } esttab reg_* (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- zpalter 213.0*** 192.2*** 42.43 33.35 (8.44) (7.78) (1.88) (1.51) c.zpalter#~r -1.930*** -1.810*** -0.326 -0.217 (-6.90) (-6.63) (-1.31) (-0.89) 1.m1202 0 0 (.) (.) 2.m1202 390.5* 524.5*** (2.12) (3.56) 3.m1202 1172.5*** 1020.9*** (5.45) (5.55) 4.m1202 2549.6*** 2046.7*** (13.72) (13.76) _cons -1210.6* -1824.9*** 1560.8** 606.5 (-2.22) (-3.43) (3.15) (1.25) ---------------------------------------------------------------------------- N 8451 8442 8092 8079 ---------------------------------------------------------------------------- t statistics in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Mit mgroups können wir dann mehrere Spalten überschreiben. pattern gibt dabei die Gruppierung an: 1 steht für (nächstes) Label, 0 für unter vorheriges einordnen. esttab reg_*, r2 /// mgroups(&quot;Männer&quot; &quot;Frauen&quot;, pattern(1 0 1 0)) esttab reg_*, r2 /// mgroups(&quot;&quot; &quot;Männer&quot; &quot;Frauen&quot;, pattern(1 1 0 1 )) Männer Frauen (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- zpalter 213.0*** 192.2*** 42.43 33.35 (8.44) (7.78) (1.88) (1.51) c.zpalter#~r -1.930*** -1.810*** -0.326 -0.217 (-6.90) (-6.63) (-1.31) (-0.89) 1.m1202 0 0 (.) (.) 2.m1202 390.5* 524.5*** (2.12) (3.56) 3.m1202 1172.5*** 1020.9*** (5.45) (5.55) 4.m1202 2549.6*** 2046.7*** (13.72) (13.76) _cons -1210.6* -1824.9*** 1560.8** 606.5 (-2.22) (-3.43) (3.15) (1.25) ---------------------------------------------------------------------------- N 8451 8442 8092 8079 R-sq 0.021 0.089 0.003 0.072 ---------------------------------------------------------------------------- t statistics in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 ---------------------------------------------------------------------------- Männer Frauen (1) (2) (3) (4) F518_SUF F518_SUF F518_SUF F518_SUF ---------------------------------------------------------------------------- zpalter 213.0*** 192.2*** 42.43 33.35 (8.44) (7.78) (1.88) (1.51) c.zpalter#~r -1.930*** -1.810*** -0.326 -0.217 (-6.90) (-6.63) (-1.31) (-0.89) 1.m1202 0 0 (.) (.) 2.m1202 390.5* 524.5*** (2.12) (3.56) 3.m1202 1172.5*** 1020.9*** (5.45) (5.55) 4.m1202 2549.6*** 2046.7*** (13.72) (13.76) _cons -1210.6* -1824.9*** 1560.8** 606.5 (-2.22) (-3.43) (3.15) (1.25) ---------------------------------------------------------------------------- N 8451 8442 8092 8079 R-sq 0.021 0.089 0.003 0.072 ---------------------------------------------------------------------------- t statistics in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 5.7 Einmal mit allem All diese Formatierungen sind natürlich kombinierbar: glo mod1 &quot; &quot; glo mod2 &quot;c.zpalter&quot; glo mod3 &quot;c.zpalter##c.zpalter&quot; glo mod4 &quot;c.zpalter##c.zpalter i.m1202&quot; forvalues s = 1/2 { xi: reg F518_SUF c.zpalter##c.zpalter if S1 == `s&#39; est store reg_`s&#39;_1 estadd local note &quot;Alter &amp; Alter^2&quot; xi: reg F518_SUF c.zpalter##c.zpalter i.m1202 if S1 == `s&#39; est store reg_`s&#39;_2 estadd local note &quot;Alter &amp; Alter^2, Ausbildung&quot; } esttab reg_* , /// b se(%9.3f) /// nomtitle /// coeflabel(_IS1_2 &quot;Frauen&quot; zpalter &quot;Alter&quot; /// c.zpalter#c.zpalter &quot;Alter²&quot; /// _Im1202_2 &quot;dual/schul. Abs.&quot; /// _Im1202_3 &quot;Meister/Techniker&quot; /// _Im1202_4 &quot;Hochschule/Uni&quot; /// _cons &quot;Konstante&quot;) /// stats(r2 N, fmt(%9.3f %9.0g) labels(R² Observations)) /// refcat(_Im1202_2 &quot;kein Abs.&quot;) /// mgroups(&quot;Männer&quot; &quot;Frauen&quot;, pattern(1 0 1 0)) /// varwidth(20) Männer Frauen (1) (2) (3) (4) ------------------------------------------------------------------------------------ Alter 213.0*** 192.2*** 42.43 33.35 (25.236) (24.688) (22.611) (22.120) Alter² -1.930*** -1.810*** -0.326 -0.217 (0.280) (0.273) (0.249) (0.243) dual/schul. Abs. 390.5* 524.5*** (183.930) (147.488) Meister/Techniker 1172.5*** 1020.9*** (215.289) (183.784) Hochschule/Uni 2549.6*** 2046.7*** (185.774) (148.792) Konstante -1210.6* -1824.9*** 1560.8** 606.5 (544.709) (532.431) (494.799) (483.370) ------------------------------------------------------------------------------------ R² 0.021 0.089 0.003 0.072 Observations 8451 8442 8092 8079 ------------------------------------------------------------------------------------ Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 5.8 Übungen 5.8.1 Übung Erstellen Sie ein bivariates Regressionsmodell mit F518_SUF als abhängiger und az als unabhängiger Variable. reg F518_SUF az Speichern Sie die Ergebnisse mit estimates store und erstellen Sie eine Tabelle mit esttab Wie können Sie die Standardfehler statt der t-Werte anzeigen lassen? Lassen Sie sich auch das R² und die Fallzahl ausgeben. Labeln Sie die Variablen links in der Tabelle. Verändern Sie das Signifikanzniveau Lassen Sie sich den Koeffizienten, den SE, die 95%-KI-Grenzen, den t-Wert und den p-Wert für die Variable und die Konstante neben- statt untereinander anzeigen. 5.8.2 Übung Erstellen Sie ein bivariates Regressionsmodell mit F518_SUF als abhängiger und mig als unabhängiger Variable. In mig01 steht dann 0 für keinen Migrationshintergrund und 1 für Migrationshintergrund (siehe auch 01_init.do): gen mig01 = Mig != 0 if !missing(Mig) reg F518_SUF i.mig01 Erstellen Sie das Modell mit Hilfe von xi so, dass Sie die Referenzkategorie beschriften können. FÜgen Sie die Beschriftung für die Referenzkategorie ein. 5.8.3 Übung Erstellen Sie ein Regressionsmodell, welches schrittweise mehrere Variablen aufnimmt: est dir // liste alle gespeicherten Ergebnisse estimates clear glo mod1 &quot; &quot; glo mod2 &quot;c.zpalter&quot; glo mod3 &quot;c.zpalter##c.zpalter&quot; glo mod4 &quot;c.zpalter##c.zpalter i.m1202&quot; forval i = 1/4 { xi: reg az i.S1 ${mod`i&#39;} est store regmx`i&#39; } est dir esttab regmx*, b se(%9.3f) Stellen Sie die Ergebnisse in einer Tabelle nebeneinander dar. Labeln Sie Variablen und wie oben gezeigt und verändern Sie die labels 5.8.4 Übung Verwenden Sie die Modellserie von gerade eben (Übung 3), behalten Sie aber den Koeffizienten für das Geschlecht in ihrer Tabelle. Wie müssen Sie die Schleife für die Modellserie aus Übung 3 anpassen, um die Kontrollvariablen in einer Zeile unten einzufügen? 5.8.5 Übung Schätzen Sie getrennte Modelle für mig01=0 und mig01=1 mit den Kontrollvariablen aus Übung 3. Passen Sie also die Schleife von oben an, sodass jeweils zwei Modelle für die Gruppen mig01=0 und mig01=1 geschätzt werden: forvalues m = 0/1 { xi: reg F518_SUF c.zpalter##c.zpalter if mig01 == `m&#39; est store reg_`s&#39;_1 estadd local note &quot;Alter &amp; Alter^2&quot; xi: reg F518_SUF c.zpalter##c.zpalter i.m1202 if mig01 == `m&#39; est store reg_`s&#39;_2 estadd local note &quot;Alter &amp; Alter^2, Ausbildung&quot; } esttab reg_* Fügen Sie jetzt Gruppenlabels ein und labeln Sie die Tabelle entsprechend der kennengelernten Optionen. "],["ml_log.html", "6 Multilevel- und logit Modelle 6.1 logit 6.2 Mehrebenenmodelle", " 6 Multilevel- und logit Modelle .libPaths(&quot;D:/R-library4&quot;) knitr::opts_chunk$set(collapse = TRUE) knitr::opts_chunk$set(dpi=800) # knitr::opts_chunk$set(collectcode = T) library(Statamarkdown) library(tidyverse) library(kableExtra) stataexe &lt;- &quot;C:/Program Files/Stata16/StataSE-64.exe&quot; knitr::opts_chunk$set(engine.path=list(stata=stataexe)) # baua &lt;- readstata13::read.dta13(&quot;D:/Datenspeicher/BIBB_BAuA/BIBBBAuA_2018_suf1.0.dta&quot;,convert.factors = F) 6.1 logit Um die Odds Ratios zu erhalten, müssen wir eform verwenden: logit nt i.S1 est store logm1 esttab logm1, b se(%9.3f) Iteration 0: log likelihood = -6191.9354 Iteration 1: log likelihood = -6187.5538 Iteration 2: log likelihood = -6187.55 Iteration 3: log likelihood = -6187.55 Logistic regression Number of obs = 20,012 LR chi2(1) = 8.77 Prob &gt; chi2 = 0.0031 Log likelihood = -6187.55 Pseudo R2 = 0.0007 ------------------------------------------------------------------------------ nt | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- S1 | weiblich | .1442729 .0487565 2.96 0.003 .048712 .2398339 _cons | -2.351375 .0353592 -66.50 0.000 -2.420678 -2.282073 ------------------------------------------------------------------------------ ---------------------------- (1) nt ---------------------------- nt 1.S1 0 (.) 2.S1 0.144** (0.049) _cons -2.351*** (0.035) ---------------------------- N 20012 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 esttab logm1, b se(%9.3f) eform // eform für Odds Ratios (1) nt ---------------------------- nt 1.S1 1 (.) 2.S1 1.155** (0.056) ---------------------------- N 20012 ---------------------------- Exponentiated coefficients; Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Außerdem können wir mit estadd lrtest direkt den LR-Test in die Tabelle aufnehmen: logit nt i.S1 if !missing(zpalter) est store logm1b logit nt i.S1 zpalter est store logm2 estadd lrtest logm1b esttab logm*, b se(%9.3f) scalars(&quot;lrtest_chi2 LRTest Chi²&quot; lrtest_df lrtest_p) (1) nt ---------------------------- nt 1.S1 0 (.) 2.S1 0.158** (0.049) zpalter -0.0108*** (0.002) _cons -1.854*** (0.103) ---------------------------- N 19836 LRTest Chi² 25.46 lrtest_df 1 lrtest_p 0.000000451 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Mit pr2 aic bic können wir Modellkennzahlen ausgeben lassen. esttab logm*, b se(%9.3f) pr2 aic bic (1) nt ---------------------------- nt 1.S1 0 (.) 2.S1 0.158** (0.049) zpalter -0.0108*** (0.002) _cons -1.854*** (0.103) ---------------------------- N 19836 LRTest Chi² 25.46 lrtest_df 1 lrtest_p 0.000000451 ---------------------------- Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 Bei margins müssen wir darauf achten, die Option , post zu verwenden: logit nt i.S1 zpalter margins, dydx(*) post est store mar_mod2 esttab mar_mod2, cells(&quot;b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))&quot;) nonumbers b se min95 max95 p ----------------------------------------------------------------------------- 1.S1 0 . 0 0 . 2.S1 0.0133 0.00414 0.00523 0.0214 0.00126 zpalter -0.000911 0.000180 -0.00126 -0.000558 0.000000428 ----------------------------------------------------------------------------- N 19836 ----------------------------------------------------------------------------- Das funktioniert natürlich auch für die predictions mit ,at(): est restore logm2 margins, at(zpalter = (18 20(5)65) ) post est store pred_mod2 esttab pred_mod2, cells(&quot;b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))&quot;) nonumbers b se min95 max95 p ----------------------------------------------------------------------------- 1._at 0.123 0.00697 0.109 0.136 0 2._at 0.120 0.00644 0.108 0.133 0 3._at 0.115 0.00520 0.105 0.125 0 4._at 0.109 0.00411 0.101 0.117 0 5._at 0.104 0.00318 0.0980 0.110 0 6._at 0.0993 0.00248 0.0944 0.104 0 7._at 0.0945 0.00210 0.0904 0.0987 0 8._at 0.0900 0.00212 0.0859 0.0942 0 9._at 0.0857 0.00243 0.0809 0.0904 0 10._at 0.0815 0.00288 0.0759 0.0872 0 11._at 0.0776 0.00337 0.0710 0.0842 0 ----------------------------------------------------------------------------- N 19836 ----------------------------------------------------------------------------- 6.2 Mehrebenenmodelle transform(ln*: exp(@) exp(@)) um die Werte im Random Part richtig anzuzeigen: xtmixed F518_SUF i.S1 ||Bula: est store mmodel esttab mmodel , transform(ln*: exp(@) exp(@)) (1) F518_SUF ---------------------------- F518_SUF 1.S1 0 (.) 2.S1 -1437.4*** (-26.88) _cons 4123.8*** (41.45) ---------------------------- lns1_1_1 _cons 354.8*** (28.17) ---------------------------- lnsig_e _cons 3445.8*** (1484.91) ---------------------------- N 16635 ---------------------------- t statistics in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 So können wir die ICC hinzufügen: xtmixed F518_SUF i.S1 ||Bula: estat icc estadd scalar icc2 = r(icc2) esttab, se wide transform(ln*: exp(@) exp(@)) /// varwidth(13) scalars(icc2) (1) F518_SUF ------------------------------------------ F518_SUF 1.S1 0 (.) 2.S1 -1437.4*** (53.47) _cons 4123.8*** (99.48) ------------------------------------------ lns1_1_1 _cons 354.8*** (73.97) ------------------------------------------ lnsig_e _cons 3445.8*** (18.90) ------------------------------------------ N 16635 icc2 0.0105 ------------------------------------------ Standard errors in parentheses * p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001 "],["misc.html", "7 Weitere Optionen 7.1 estimates store auch bei estpost 7.2 Excel-Export", " 7 Weitere Optionen 7.1 estimates store auch bei estpost Wir können auch die estimates aus einem estpost speichern, um sie später wieder aufzurufen - auch nach einem Befehl, der eigentlich e() überschreibt. estpost correlate zpalter F518_SUF F200, matrix estimates store m1 xi: reg az i.S1 est store m2 esttab m1, not unstack compress noobs nonumber nomtitles /// varlabels(zpalter &quot;(1) Alter&quot; F518_SUF &quot;(2) Bruttoeinkommen&quot; F200 &quot;(3) Wochenarbeitszeit&quot;) /// eqlabels(&quot;(1) Alter&quot; &quot;(2) Bruttoeinkommen&quot; &quot;(3) Wochenarbeitszeit&quot;) /// collabels(none) /// varwidth(22) /// modelwidth(22) (1) Alter (2) Bruttoeinkommen (3) Wochenarbeitszeit ---------------------------------------------------------------------------------------------------- (1) Alter 1.00000 (2) Bruttoeinkommen 0.07956*** 1.00000 (3) Wochenarbeitszeit -0.05579*** 0.29245*** 1.00000 ---------------------------------------------------------------------------------------------------- 7.2 Excel-Export Für den Excel-Export können wir einfach using ...csv nutzen. Für deutschsprachige Systeme empfiehlt sich dabei aber, statt , ein ; als Spaltentrenner zu verwenden. Das können wir mit der Option scsv erreichen. csv als Dateiendung produziert eine csv-Datei, die mit Excel geöffnet werden kann nostar empfiehlt sich für den Excel-Export, da Sternchen in Excel häufig zu Problemen führen scsv ; anstelle von , als Spaltenseparator esttab mod* using &quot;${results}\\tabelle1.csv&quot;, cells(&quot;b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))&quot;) scsv "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
